plugins {
    id 'groovy'
    id 'com.adarshr.test-logger' version '4.0.0'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.groovy:groovy:4.0.14'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.spockframework:spock-core:2.4-M4-groovy-4.0'
}

test {
    useJUnitPlatform()

//    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

testlogger {
    showPassed = false
    showFailed = true
    showSkipped = false
}


if (!project.hasProperty('ci-environment')) {
    test {
        reports.html.required = false
        reports.junitXml.required = false
    }

    tasks.register('notifyTestResults') {
        doLast {
            def title = "Gradle Test Notification"
            // Determine the result message based on test outcomes
            def testResult = tasks.test.state.executed && tasks.test.state.failure
                    ? "ðŸš¨ TESTS FAILED! ðŸš¨ Please check the logs for details."
                    : "âœ… All tests passed successfully!"

            if (System.getProperty("os.name").toLowerCase().contains("mac")) {
                def script = "display notification ${testResult} with title ${title}"
                exec {
                    commandLine 'osascript', '-e', script
                }
            } else {
                exec {
                    commandLine 'notify-send', title, testResult
                }
            }
        }
    }

    tasks.test.doFirst {
        // Clear the terminal screen using ANSI escape codes
        println "\033[H\033[2J"
        // Print the title for better logging
        println "\n==============================="
        println "âœ¨ Terminal Screen Cleared âœ¨"
        println "ðŸš€ Starting Tests..."
        println "==============================="
    }
    tasks.test.finalizedBy notifyTestResults
}
